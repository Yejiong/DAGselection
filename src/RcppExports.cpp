// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// toBinary
std::string toBinary(int n, int k);
RcppExport SEXP _DAGselection_toBinary(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(toBinary(n, k));
    return rcpp_result_gen;
END_RCPP
}
// Tode
int Tode(String s);
RcppExport SEXP _DAGselection_Tode(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(Tode(s));
    return rcpp_result_gen;
END_RCPP
}
// selectdata_prelim
DataFrame selectdata_prelim(DataFrame df, NumericVector indicator, int m);
RcppExport SEXP _DAGselection_selectdata_prelim(SEXP dfSEXP, SEXP indicatorSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type indicator(indicatorSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(selectdata_prelim(df, indicator, m));
    return rcpp_result_gen;
END_RCPP
}
// comparison_bps
DataFrame comparison_bps(DataFrame df, int num_p);
RcppExport SEXP _DAGselection_comparison_bps(SEXP dfSEXP, SEXP num_pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type num_p(num_pSEXP);
    rcpp_result_gen = Rcpp::wrap(comparison_bps(df, num_p));
    return rcpp_result_gen;
END_RCPP
}
// get_best_parents
List get_best_parents(String x, CharacterVector C, CharacterVector all_names);
RcppExport SEXP _DAGselection_get_best_parents(SEXP xSEXP, SEXP CSEXP, SEXP all_namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type x(xSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type C(CSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type all_names(all_namesSEXP);
    rcpp_result_gen = Rcpp::wrap(get_best_parents(x, C, all_names));
    return rcpp_result_gen;
END_RCPP
}
// sinks
DataFrame sinks(CharacterVector all_names);
RcppExport SEXP _DAGselection_sinks(SEXP all_namesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type all_names(all_namesSEXP);
    rcpp_result_gen = Rcpp::wrap(sinks(all_names));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DAGselection_toBinary", (DL_FUNC) &_DAGselection_toBinary, 2},
    {"_DAGselection_Tode", (DL_FUNC) &_DAGselection_Tode, 1},
    {"_DAGselection_selectdata_prelim", (DL_FUNC) &_DAGselection_selectdata_prelim, 3},
    {"_DAGselection_comparison_bps", (DL_FUNC) &_DAGselection_comparison_bps, 2},
    {"_DAGselection_get_best_parents", (DL_FUNC) &_DAGselection_get_best_parents, 3},
    {"_DAGselection_sinks", (DL_FUNC) &_DAGselection_sinks, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DAGselection(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
